{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"jupytext":{"formats":"md,ipynb"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1338830,"sourceType":"datasetVersion","datasetId":708136},{"sourceId":1363948,"sourceType":"datasetVersion","datasetId":701538},{"sourceId":1495782,"sourceType":"datasetVersion","datasetId":878523}],"dockerImageVersionId":30648,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mkrhellol/exercise-custom-convnets?scriptVersionId=223948057\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"**This notebook is an exercise in the [Computer Vision](https://www.kaggle.com/learn/computer-vision) course.  You can reference the tutorial at [this link](https://www.kaggle.com/ryanholbrook/custom-convnets).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"# Introduction #\n\nIn these exercises, you'll build a custom convnet with performance competitive to the VGG16 model from Lesson 1.\n\nGet started by running the code cell below.","metadata":{}},{"cell_type":"code","source":"# Setup feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.computer_vision.ex5 import *\n\n# Imports\nimport os, warnings\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\n\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\n\n# Reproducability\ndef set_seed(seed=31415):\n    np.random.seed(seed)\n    tf.random.set_seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    os.environ['TF_DETERMINISTIC_OPS'] = '1'\nset_seed()\n\n# Set Matplotlib defaults\nplt.rc('figure', autolayout=True)\nplt.rc('axes', labelweight='bold', labelsize='large',\n       titleweight='bold', titlesize=18, titlepad=10)\nplt.rc('image', cmap='magma')\nwarnings.filterwarnings(\"ignore\") # to clean up output cells\n\n\n# Load training and validation sets\nds_train_ = image_dataset_from_directory(\n    '../input/car-or-truck/train',\n    labels='inferred',\n    label_mode='binary',\n    image_size=[128, 128],\n    interpolation='nearest',\n    batch_size=64,\n    shuffle=True,\n)\nds_valid_ = image_dataset_from_directory(\n    '../input/car-or-truck/valid',\n    labels='inferred',\n    label_mode='binary',\n    image_size=[128, 128],\n    interpolation='nearest',\n    batch_size=64,\n    shuffle=False,\n)\n\n# Data Pipeline\ndef convert_to_float(image, label):\n    image = tf.image.convert_image_dtype(image, dtype=tf.float32)\n    return image, label\n\nAUTOTUNE = tf.data.experimental.AUTOTUNE\nds_train = (\n    ds_train_\n    .map(convert_to_float)\n    .cache()\n    .prefetch(buffer_size=AUTOTUNE)\n)\nds_valid = (\n    ds_valid_\n    .map(convert_to_float)\n    .cache()\n    .prefetch(buffer_size=AUTOTUNE)\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:33:01.626311Z","iopub.execute_input":"2025-02-22T18:33:01.626655Z","iopub.status.idle":"2025-02-22T18:33:07.370009Z","shell.execute_reply.started":"2025-02-22T18:33:01.626624Z","shell.execute_reply":"2025-02-22T18:33:07.369277Z"}},"outputs":[{"name":"stdout","text":"Found 5117 files belonging to 2 classes.\nFound 5051 files belonging to 2 classes.\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"# Design a Convnet #\n\nLet's design a convolutional network with a block architecture like we saw in the tutorial. The model from the example had three blocks, each with a single convolutional layer. Its performance on the \"Car or Truck\" problem was okay, but far from what the pretrained VGG16 could achieve. It might be that our simple network lacks the ability to extract sufficiently complex features. We could try improving the model either by adding more blocks or by adding convolutions to the blocks we have.\n\nLet's go with the second approach. We'll keep the three block structure, but increase the number of `Conv2D` layer in the second block to two, and in the third block to three.\n\n<figure>\n<!-- <img src=\"./images/2-convmodel-2.png\" width=\"250\" alt=\"Diagram of a convolutional model.\"> -->\n<img src=\"https://storage.googleapis.com/kaggle-media/learn/images/Vko6nCK.png\" width=\"250\" alt=\"Diagram of a convolutional model.\">\n</figure>\n\n# 1) Define Model #\n\nGiven the diagram above, complete the model by defining the layers of the third block.","metadata":{}},{"cell_type":"code","source":"from tensorflow import keras\nfrom tensorflow.keras import layers\n\nmodel = keras.Sequential([\n    # Block One\n    layers.Conv2D(filters=32, kernel_size=3, activation='relu', padding='same',\n                  input_shape=[128, 128, 3]),\n    layers.MaxPool2D(),\n\n    # Block Two\n    layers.Conv2D(filters=64, kernel_size=3, activation='relu', padding='same'),\n    layers.MaxPool2D(),\n\n    # Block Three\n    layers.Conv2D(filters=128, kernel_size=3, activation='relu', padding='same'),\n    layers.Conv2D(filters=128, kernel_size=3, activation='relu', padding='same'),\n    layers.MaxPool2D(),\n\n    # Head\n    layers.Flatten(),\n    layers.Dense(6, activation='relu'),\n    layers.Dropout(0.2),\n    layers.Dense(1, activation='sigmoid'),\n])\n\n# Check your answer\nq_1.check()","metadata":{"lines_to_next_cell":0,"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:33:12.802958Z","iopub.execute_input":"2025-02-22T18:33:12.803663Z","iopub.status.idle":"2025-02-22T18:33:13.147714Z","shell.execute_reply.started":"2025-02-22T18:33:12.803632Z","shell.execute_reply":"2025-02-22T18:33:13.146819Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"1_Q1\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#q_1.hint()\n#q_1.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:15:48.487884Z","iopub.execute_input":"2025-02-22T18:15:48.488696Z","iopub.status.idle":"2025-02-22T18:15:48.49232Z","shell.execute_reply.started":"2025-02-22T18:15:48.488666Z","shell.execute_reply":"2025-02-22T18:15:48.491354Z"}},"outputs":[],"execution_count":6},{"cell_type":"markdown","source":"# 2) Compile #\n\nTo prepare for training, compile the model with an appropriate loss and accuracy metric for the \"Car or Truck\" dataset.","metadata":{}},{"cell_type":"code","source":"model.compile(\n    optimizer=tf.keras.optimizers.Adam(epsilon=0.01),\n    #Add loss and metric\n    loss='binary_crossentropy',\n    metrics=['binary_accuracy']\n)\n\n# Check your answer\nq_2.check()","metadata":{"lines_to_next_cell":0,"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:33:18.578201Z","iopub.execute_input":"2025-02-22T18:33:18.578974Z","iopub.status.idle":"2025-02-22T18:33:18.60039Z","shell.execute_reply.started":"2025-02-22T18:33:18.578943Z","shell.execute_reply":"2025-02-22T18:33:18.599551Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"2_Q2\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"model.compile(\n    optimizer=tf.keras.optimizers.Adam(epsilon=0.01),\n    loss='binary_crossentropy',\n    metrics=['binary_accuracy'],\n)\nq_2.assert_check_passed()","metadata":{"lines_to_next_cell":0,"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:33:21.129712Z","iopub.execute_input":"2025-02-22T18:33:21.130517Z","iopub.status.idle":"2025-02-22T18:33:21.144051Z","shell.execute_reply.started":"2025-02-22T18:33:21.130489Z","shell.execute_reply":"2025-02-22T18:33:21.143188Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"2_Q2\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#q_2.hint()\n#q_2.solution()","metadata":{"lines_to_next_cell":0},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Finally, let's test the performance of this new model. First run this cell to fit the model to the training set.","metadata":{}},{"cell_type":"code","source":"history = model.fit(\n    ds_train,\n    validation_data=ds_valid,\n    epochs=50,\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:33:24.697671Z","iopub.execute_input":"2025-02-22T18:33:24.698522Z","iopub.status.idle":"2025-02-22T18:36:26.708897Z","shell.execute_reply.started":"2025-02-22T18:33:24.698492Z","shell.execute_reply":"2025-02-22T18:36:26.708016Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/50\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1740249209.902833     107 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"80/80 [==============================] - 22s 199ms/step - loss: 0.6801 - binary_accuracy: 0.5751 - val_loss: 0.6680 - val_binary_accuracy: 0.5785\nEpoch 2/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6646 - binary_accuracy: 0.5787 - val_loss: 0.6558 - val_binary_accuracy: 0.5785\nEpoch 3/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6604 - binary_accuracy: 0.5787 - val_loss: 0.6500 - val_binary_accuracy: 0.5785\nEpoch 4/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6568 - binary_accuracy: 0.5787 - val_loss: 0.6447 - val_binary_accuracy: 0.5785\nEpoch 5/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6513 - binary_accuracy: 0.5841 - val_loss: 0.6395 - val_binary_accuracy: 0.6185\nEpoch 6/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6384 - binary_accuracy: 0.6308 - val_loss: 0.6406 - val_binary_accuracy: 0.6019\nEpoch 7/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6340 - binary_accuracy: 0.6346 - val_loss: 0.6301 - val_binary_accuracy: 0.6316\nEpoch 8/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6295 - binary_accuracy: 0.6469 - val_loss: 0.6250 - val_binary_accuracy: 0.6361\nEpoch 9/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6254 - binary_accuracy: 0.6600 - val_loss: 0.6199 - val_binary_accuracy: 0.6324\nEpoch 10/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6111 - binary_accuracy: 0.6738 - val_loss: 0.6089 - val_binary_accuracy: 0.6521\nEpoch 11/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.6058 - binary_accuracy: 0.6881 - val_loss: 0.6006 - val_binary_accuracy: 0.6700\nEpoch 12/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.5986 - binary_accuracy: 0.6865 - val_loss: 0.5949 - val_binary_accuracy: 0.6723\nEpoch 13/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.5797 - binary_accuracy: 0.7088 - val_loss: 0.5698 - val_binary_accuracy: 0.7111\nEpoch 14/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.5678 - binary_accuracy: 0.7188 - val_loss: 0.5580 - val_binary_accuracy: 0.7145\nEpoch 15/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.5546 - binary_accuracy: 0.7270 - val_loss: 0.5428 - val_binary_accuracy: 0.7286\nEpoch 16/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.5375 - binary_accuracy: 0.7381 - val_loss: 0.5329 - val_binary_accuracy: 0.7385\nEpoch 17/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.5184 - binary_accuracy: 0.7510 - val_loss: 0.5171 - val_binary_accuracy: 0.7496\nEpoch 18/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.4984 - binary_accuracy: 0.7663 - val_loss: 0.5165 - val_binary_accuracy: 0.7515\nEpoch 19/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.4712 - binary_accuracy: 0.7835 - val_loss: 0.5115 - val_binary_accuracy: 0.7569\nEpoch 20/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.4474 - binary_accuracy: 0.7964 - val_loss: 0.5124 - val_binary_accuracy: 0.7507\nEpoch 21/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.4254 - binary_accuracy: 0.8136 - val_loss: 0.4594 - val_binary_accuracy: 0.7895\nEpoch 22/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.4045 - binary_accuracy: 0.8216 - val_loss: 0.4893 - val_binary_accuracy: 0.7543\nEpoch 23/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.3940 - binary_accuracy: 0.8241 - val_loss: 0.4795 - val_binary_accuracy: 0.7660\nEpoch 24/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.3662 - binary_accuracy: 0.8439 - val_loss: 0.4538 - val_binary_accuracy: 0.7771\nEpoch 25/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.3411 - binary_accuracy: 0.8536 - val_loss: 0.4812 - val_binary_accuracy: 0.7523\nEpoch 26/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.3292 - binary_accuracy: 0.8601 - val_loss: 0.4885 - val_binary_accuracy: 0.7410\nEpoch 27/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.3013 - binary_accuracy: 0.8714 - val_loss: 0.4587 - val_binary_accuracy: 0.7676\nEpoch 28/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.2912 - binary_accuracy: 0.8790 - val_loss: 0.4256 - val_binary_accuracy: 0.8034\nEpoch 29/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.2754 - binary_accuracy: 0.8853 - val_loss: 0.4605 - val_binary_accuracy: 0.8155\nEpoch 30/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.2418 - binary_accuracy: 0.8988 - val_loss: 0.5253 - val_binary_accuracy: 0.8097\nEpoch 31/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.2105 - binary_accuracy: 0.9177 - val_loss: 0.4592 - val_binary_accuracy: 0.8218\nEpoch 32/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1920 - binary_accuracy: 0.9291 - val_loss: 0.5161 - val_binary_accuracy: 0.8264\nEpoch 33/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1711 - binary_accuracy: 0.9314 - val_loss: 0.4383 - val_binary_accuracy: 0.8359\nEpoch 34/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1698 - binary_accuracy: 0.9312 - val_loss: 0.4664 - val_binary_accuracy: 0.8446\nEpoch 35/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1352 - binary_accuracy: 0.9519 - val_loss: 0.5301 - val_binary_accuracy: 0.8412\nEpoch 36/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1183 - binary_accuracy: 0.9531 - val_loss: 0.5245 - val_binary_accuracy: 0.8345\nEpoch 37/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1301 - binary_accuracy: 0.9541 - val_loss: 0.5561 - val_binary_accuracy: 0.8390\nEpoch 38/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1261 - binary_accuracy: 0.9513 - val_loss: 0.5215 - val_binary_accuracy: 0.8400\nEpoch 39/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1253 - binary_accuracy: 0.9508 - val_loss: 0.7165 - val_binary_accuracy: 0.8252\nEpoch 40/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1191 - binary_accuracy: 0.9525 - val_loss: 0.6686 - val_binary_accuracy: 0.8133\nEpoch 41/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1199 - binary_accuracy: 0.9496 - val_loss: 0.5453 - val_binary_accuracy: 0.8317\nEpoch 42/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1009 - binary_accuracy: 0.9611 - val_loss: 0.8534 - val_binary_accuracy: 0.8008\nEpoch 43/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1179 - binary_accuracy: 0.9531 - val_loss: 0.5065 - val_binary_accuracy: 0.8384\nEpoch 44/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.1122 - binary_accuracy: 0.9594 - val_loss: 0.4762 - val_binary_accuracy: 0.8384\nEpoch 45/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.0956 - binary_accuracy: 0.9638 - val_loss: 0.6037 - val_binary_accuracy: 0.8353\nEpoch 46/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.0789 - binary_accuracy: 0.9681 - val_loss: 0.6209 - val_binary_accuracy: 0.8260\nEpoch 47/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.0707 - binary_accuracy: 0.9734 - val_loss: 0.5761 - val_binary_accuracy: 0.8533\nEpoch 48/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.0522 - binary_accuracy: 0.9795 - val_loss: 0.6350 - val_binary_accuracy: 0.8495\nEpoch 49/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.0418 - binary_accuracy: 0.9846 - val_loss: 0.7055 - val_binary_accuracy: 0.8527\nEpoch 50/50\n80/80 [==============================] - 3s 41ms/step - loss: 0.0411 - binary_accuracy: 0.9836 - val_loss: 0.8087 - val_binary_accuracy: 0.8559\n","output_type":"stream"}],"execution_count":6},{"cell_type":"markdown","source":"And now run the cell below to plot the loss and metric curves for this training run.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nhistory_frame = pd.DataFrame(history.history)\nhistory_frame.loc[:, ['loss', 'val_loss']].plot()\nhistory_frame.loc[:, ['binary_accuracy', 'val_binary_accuracy']].plot();","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:38:57.522744Z","iopub.execute_input":"2025-02-22T18:38:57.523547Z","iopub.status.idle":"2025-02-22T18:38:58.293Z","shell.execute_reply.started":"2025-02-22T18:38:57.523506Z","shell.execute_reply":"2025-02-22T18:38:58.292045Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"# 3) Train the Model #\n\nHow would you interpret these training curves? Did this model improve upon the model from the tutorial?","metadata":{}},{"cell_type":"code","source":"# View the solution (Run this code cell to receive credit!)\nq_3.check()","metadata":{"lines_to_next_cell":0,"trusted":true,"execution":{"iopub.status.busy":"2025-02-22T18:39:27.054398Z","iopub.execute_input":"2025-02-22T18:39:27.055138Z","iopub.status.idle":"2025-02-22T18:39:27.062213Z","shell.execute_reply.started":"2025-02-22T18:39:27.05511Z","shell.execute_reply":"2025-02-22T18:39:27.061226Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 4, \"questionId\": \"3_Q3\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct: \n\n\nThe learning curves for the model from the tutorial diverged fairly rapidly. This would indicate that it was prone to overfitting and in need of some regularization. The additional layer in our new model would make it even more prone to overfitting. However, adding some regularization with the `Dropout` layer helped prevent this. These changes improved the validation accuracy of the model by several points.","text/markdown":"<span style=\"color:#33cc33\">Correct:</span> \n\n\nThe learning curves for the model from the tutorial diverged fairly rapidly. This would indicate that it was prone to overfitting and in need of some regularization. The additional layer in our new model would make it even more prone to overfitting. However, adding some regularization with the `Dropout` layer helped prevent this. These changes improved the validation accuracy of the model by several points.\n"},"metadata":{}}],"execution_count":8},{"cell_type":"markdown","source":"# Conclusion #\n\nThese exercises showed you how to design a custom convolutional network to solve a specific classification problem. Though most models these days will be built on top of a pretrained base, it certain circumstances a smaller custom convnet might still be preferable -- such as with a smaller or unusual dataset or when computing resources are very limited. As you saw here, for certain problems they can perform just as well as a pretrained model.\n\n# Keep Going #\n\nContinue on to [**Lesson 6**](https://www.kaggle.com/ryanholbrook/data-augmentation), where you'll learn a widely-used technique that can give a boost to your training data: **data augmentation**.","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/computer-vision/discussion) to chat with other learners.*","metadata":{}}]}